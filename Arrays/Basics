Problem statement
You are given an array ‘Arr’ consisting of ‘N’ distinct integers and a positive integer ‘K’. Find out Kth smallest and Kth largest element of the array. It is guaranteed that K is not greater than the size of the array.

Example:

Let ‘N’ = 4,  ‘Arr’ be [1, 2, 5, 4] and ‘K’ = 3.  
then the elements of this array in ascending order is [1, 2, 4, 5].  Clearly, the 3rd smallest and largest element of this array is 4 and 2 respectively.
Detailed explanation ( Input/output format, Notes, Images )
Constraints:
1 <= T <= 50
1 <= N <= 10^4
1 <= K <= N
-10^9 <= Arr[i] <= 10^9

Where ‘T’ is the total number of test cases, ‘N’ is the size of array ‘Arr’ and Arr[i] is the element of the given array.

import java.util.ArrayList;


public class Solution {
	public static ArrayList<Integer> kthSmallLarge(ArrayList<Integer> arr, int n, int k) {
		//Write your code here
		for(int i=0;i<n;i++){
			int min=arr.get(i);
			for(int j=i+1;j<n;j++){
				if(arr.get(j)<min){
					min=arr.get(j);
					arr.set(j,arr.get(i));
					arr.set(i,min);
				}
			}
		}
		int smallest=arr.get(k-1);
		int largest=arr.get(n-k);
		ArrayList<Integer> list=new ArrayList<>();
		list.add(smallest);
		list.add(largest);
		return list;
	}
